<!-- Razor page for editing a hobby with a specified Id -->
@page "/editcoffee/{Id:guid}"
@using POS_CW.Data.Services;
@using POS_CW.Data.models;
@using POS_CW.Data.services;
<!-- Inject the NavigationManager Service for page navigation -->
@inject NavigationManager NavManager

<h3>Edit Coffee</h3>

<!-- EditForm component of blazor for handling form submission and validation -->
<EditForm Model="@coffees" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Name">Name:</label>
        <!-- InputText component with two-way data binding to the hobby's Name property -->
        <InputText id="Name" class="form-control" @bind-Value="coffees.Coffee_Name" />
        <label for="Price">Price:</label>
        <InputNumber id="Price" class="form-control" @bind-Value="coffees.Coffee_Price"/>
    </div>
    <!-- Submit button for saving changes -->
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter] // Parameter to capture the hobby Id from the route above /EditHobby/{Id:guid}
    public Guid Id { get; set; }

    // Hobby object to store and edit hobby information
    public Coffee coffees;

    // Initialization method runs when the component i.e. EditHobby.razor is initialized
    protected override void OnInitialized()
    {
        coffees = Coffees_Services.GetCoffeeById(Id); // Retrieve the hobby information based on the specified Id, Calling the Method from HobbyServices class in Services Folder
        base.OnInitialized();
    }

    // HandleSubmit method is called on form submission
    public void HandleSubmit()
    {
        try
        {
            // Call HobbyServices to edit the hobby with the specified Id and updated Name by calling method EditHobby from HobbyServices class in Services Folder
            Coffees_Services.EditCoffee(Id, coffees.Coffee_Name, coffees.Coffee_Price);

            // Display a success alert and navigate back to the Hobbies page
            App.Current.MainPage.DisplayAlert("Success", "Data SuccessFully Edited", "Ok");
            NavManager.NavigateTo("/coffee");
        }
        catch (Exception ex)
        {
            // Display an error alert if an exception occurs during editing
            App.Current.MainPage.DisplayAlert("Error", $"Error Editing Hobbies:{ex.Message}", "Ok");
        }
    }
}
